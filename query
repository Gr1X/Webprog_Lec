CREATE DATABASE mene;

CREATE TABLE account(
  id_akun INT auto_increment,
  username VARCHAR(50) UNIQUE NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  password_akun VARCHAR(255) NOT NULL,
  akses_akun VARCHAR(20) NOT NULL,
  PRIMARY KEY (id_akun));

CREATE TABLE registerke(
  id_register INT auto_increment,
  id_akun INT NOT NULL,
  id_event INT NOT NULL,
  PRIMARY KEY (id_register),
  FOREIGN KEY (id_akun) REFERENCES account(id_akun),
  FOREIGN KEY (id_event) REFERENCES listevent(id_event));

CREATE TABLE listevent(
  id_event INT auto_increment,
  nama_event VARCHAR(50) NOT NULL,
  foto_event VARCHAR(255) NOT NULL,
  deskripsi VARCHAR(400) NOT NULL,
  kategori VARCHAR(20) NOT NULL, 
  tanggal_event DATE NOT NULL,
  waktu_event VARCHAR(50) NOT NULL,
  lokasi_event VARCHAR(150) NOT NULL,
  max_peserta INT NOT NULL,
  status_event VARCHAR(15) DEFAULT "open" NOT NULL,
  PRIMARY KEY (id_event));

CREATE TABLE histori(
  id_histori INT auto_increment,
  id_akun INT NOT NULL,
  id_event INT NOT NULL,
  PRIMARY KEY (id_histori),
  FOREIGN KEY (id_akun) REFERENCES account(id_akun),
  FOREIGN KEY (id_event) REFERENCES listevent(id_event));



-- Apapun yang masuk registerke masuk juga ke histori
-- registerke bisa di update & delete kapan saja
-- histori hanya bisa di delete ketika akun user di delete admin


-- Kategori -> Music, Arts, Technology, Culture
-- Waktu Event (Gabungan input waktu mulai & waktu selesai) -> 00:00 - 24:00

-- Itung Jumlah Org Yg Register Di Event X

SELECT r.id_akun, username, r.id_event, nama_event
FROM registerke AS r
JOIN account AS a ON a.id_akun = r.id_akun
JOIN listevent AS l ON l.id_event = r.id_event
WHERE r.id_event = 1;

SELECT id_event, COUNT(id_akun)
FROM registerke AS r
GROUP BY id_event;


-- if Register User
-- 1. Jika belum regis & belum penuh  > Tombol regis normal
-- 2. Jika belum regis & sudah penuh  > Tombol regis di disabled          -- Pakai COUNT -- Status Closed
-- 3. JIka sudah regis                > Tombol Regis menjadi un-register


INSERT INTO listevent (id_event, nama_event, foto_event, deskripsi, kategori, tanggal_event, waktu_event, lokasi_event, max_peserta, status_event)
VALUES
(1, 'Fan Meetup', 'databes1.jpg', 'Ketemu dengan Gadiel yuk!!', 'art', '2024-10-30', '09:00 - 11:00', 'Di UMN', 30, 'open'),
(2, 'Music Fest', 'databes2.jpg', 'Live music with popular bands!', 'music', '2024-11-01', '18:00 - 22:00', 'Di Jakarta', 500, 'open'),
(3, 'Tech Expo', 'databes3.jpg', 'Explore the latest in tech!', 'technology', '2024-11-05', '10:00 - 17:00', 'Di UMN', 200, 'open'),
(4, 'Art Workshop', 'databes4.jpg', 'Hands-on painting workshop', 'art', '2024-11-10', '13:00 - 16:00', 'Di Bandung', 50, 'closed'),
(5, 'Education Seminar', 'databes5.jpg', 'Learning made fun', 'education', '2024-11-15', '09:00 - 12:00', 'Di Surabaya', 100, 'open'),
(6, 'Sports Championship', 'databes6.jpg', 'Cheer for your favorite teams!', 'sports', '2024-11-20', '15:00 - 18:00', 'Di Bali', 1000, 'open');

-- If status & register
-- Registered jika open dan sudah register (walaupun sudah penuh)
-- Register jika open dan belum register
-- Ilang jika closed dan (penuh dan belum daftar)

-- Udah penuh > cek udah daftar atau belum
-- open > cek udah daftar atau belum
-- close > cek udah daftar atau belum

SELECT e.id_event, nama_event, foto_event, kategori, tanggal_event, max_peserta, tanggal_event, waktu_event, deskripsi, lokasi_event
FROM listevent AS e
LEFT JOIN registerke AS r ON r.id_event = e.id_event
WHERE id_akun = 1
GROUP BY e.id_event ORDER BY tanggal_event ASC;